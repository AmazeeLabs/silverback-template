<?php

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Render\RenderContext;
use Drupal\Core\Utility\Error as ErrorUtil;
use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;
use Drupal\silverback_gutenberg\LinkProcessor;

/**
 * Implements hook_default_content_exported_fields_alter().
 */
function custom_default_content_exported_fields_alter(array &$fields, ContentEntityInterface $entity) {

  // These change randomly and bring no value.
  unset(
    $fields['metatag'],
    $fields['external_preview_link'],
    $fields['access'],
    $fields['revision_translation_affected'],
  );

  // If pathauto is enabled, content export may lose the path aliases.
  if (isset($fields['path'])) {
    if ($fields['path']->pathauto == 1) {
      $fields['path']->pathauto = 0;
    }
    foreach ($entity->getTranslationLanguages(FALSE) as $langcode => $_) {
      $translation = $entity->getTranslation($langcode);
      if ($translation->get('path')->pathauto == 1) {
        $translation->get('path')->pathauto = 0;
      }
    }
  }
}

/**
 * Implements hook_silverback_gutenberg_link_processor_outbound_url_alter().
 */
function custom_silverback_gutenberg_link_processor_outbound_url_alter(
  string &$url,
  LanguageInterface $language,
  LinkProcessor $linkProcessor
) {

  // For some links pointing to media, we want to print the direct file URL
  // instead of the media route.
  if (preg_match('#^(/[a-z]{2})?/media/([0-9]+)(/edit)?$#', $url, $matches)) {
    $mediaBundles = ['document'];
    \Drupal::service('renderer')->executeInRenderContext(
      new RenderContext(),
      function () use (&$url, $matches, $language, $mediaBundles) {
        $mediaId = $matches[2];
        try {
          /** @var \Drupal\media\MediaInterface $media */
          $media = Media::load($mediaId);
          if (
            $language->getId() !== $media->language()->getId() &&
            $media->hasTranslation($language->getId())
          ) {
            $media = $media->getTranslation($language->getId());
          }
          if (
            in_array($media->bundle(), $mediaBundles) &&
            $media->access('view')
          ) {
            $source = $media->getSource()->getSourceFieldValue($media);
            $file = File::load($source);
            $url = $file->createFileUrl();
          }
        } catch (\Throwable $e) {
          \Drupal::logger('custom')->error(
            'Error turning media (id: "{mediaId}") route into file url. Error: {error}',
            [
              'mediaId' => $mediaId,
              'error' => ErrorUtil::renderExceptionSafe($e),
            ]
          );
        }
      }
    );
  }
}
