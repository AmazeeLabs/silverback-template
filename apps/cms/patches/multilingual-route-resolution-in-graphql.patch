diff --git a/src/Plugin/GraphQL/DataProducer/Routing/RouteEntity.php b/src/Plugin/GraphQL/DataProducer/Routing/RouteEntity.php
index 10ea4e6..1c35479 100644
--- a/src/Plugin/GraphQL/DataProducer/Routing/RouteEntity.php
+++ b/src/Plugin/GraphQL/DataProducer/Routing/RouteEntity.php
@@ -112,6 +112,18 @@ class RouteEntity extends DataProducerPluginBase implements ContainerFactoryPlug
       $id = $parameters[$type];
       $resolver = $this->entityBuffer->add($type, $id);
 
+      // @todo There must be a better way.
+      if (!isset($language)) {
+        // Try to get from path.
+        $prefixes = \Drupal::config('language.negotiation')->get('url.prefixes');
+        foreach ($prefixes as $prefix) {
+          if ($prefix && str_starts_with($url->toString(TRUE)->getGeneratedUrl(), '/' . $prefix . '/')) {
+            $language = $prefix;
+            break;
+          }
+        }
+      }
+
       return new Deferred(function () use ($type, $resolver, $context, $language) {
         if (!$entity = $resolver()) {
           // If there is no entity with this id, add the list cache tags so that
diff --git a/src/Plugin/GraphQL/DataProducer/Routing/RouteLoad.php b/src/Plugin/GraphQL/DataProducer/Routing/RouteLoad.php
index 48d7ad2..0f5b52d 100644
--- a/src/Plugin/GraphQL/DataProducer/Routing/RouteLoad.php
+++ b/src/Plugin/GraphQL/DataProducer/Routing/RouteLoad.php
@@ -100,13 +100,37 @@ class RouteLoad extends DataProducerPluginBase implements ContainerFactoryPlugin
       $url = $redirect->getRedirectUrl();
     }
     else {
+
+      $langcode = \Drupal::service('language.default')->get()->getId();
+      $prefixes = \Drupal::config('language.negotiation')->get('url.prefixes');
+      foreach ($prefixes as $prefix) {
+        if ($prefix && str_starts_with($path, '/' . $prefix . '/')) {
+          $langcode = $prefix;
+          break;
+        }
+      }
+      if ($langcode) {
+        $path = str_replace('/' . $langcode, '', $path);
+      }
+
+      $records = \Drupal::entityTypeManager()->getStorage('path_alias')->loadByProperties([
+        'alias' => $path,
+        'langcode' => $langcode,
+      ]);
+      $record = reset($records);
+      if ($record) {
+        $path = $record->getPath();
+      }
+
       $url = $this->pathValidator->getUrlIfValidWithoutAccessCheck($path);
+      // Set the correct language.
+      if ($url) {
+        $url->setOption('language', \Drupal::languageManager()->getLanguage($langcode));
+      }
     }
-
     if ($url && $url->isRouted() && $url->access()) {
       return $url;
     }
-
     $metadata->addCacheTags(['4xx-response']);
     return NULL;
   }
